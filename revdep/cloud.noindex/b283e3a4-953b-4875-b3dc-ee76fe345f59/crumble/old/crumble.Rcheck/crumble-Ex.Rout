
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "crumble"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('crumble')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("crumble")
> ### * crumble
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: crumble
> ### Title: Flexible and general mediation analysis
> ### Aliases: crumble
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("crumble_control")
> ### * crumble_control
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: crumble_control
> ### Title: Crumble control parameters
> ### Aliases: crumble_control
> 
> ### ** Examples
> 
> if (torch::torch_is_installed()) crumble_control(crossfit_folds = 5)
> 
> 
> 
> cleanEx()
> nameEx("sequential_module")
> ### * sequential_module
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sequential_module
> ### Title: Sequential neural network module function factory
> ### Aliases: sequential_module
> 
> ### ** Examples
> 
> if (torch::torch_is_installed()) sequential_module()
> 
> 
> 
> cleanEx()
> nameEx("tidy.crumble")
> ### * tidy.crumble
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tidy.crumble
> ### Title: Tidy a(n) crumble object
> ### Aliases: tidy.crumble
> 
> ### ** Examples
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.765 0.029 0.794 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
