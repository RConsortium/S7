% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/method.R
\name{method<-}
\alias{method<-}
\title{Register a R7 method for a generic}
\usage{
method(generic, signature) <- value
}
\arguments{
\item{generic}{A generic function, either created by \code{\link[=new_generic]{new_generic()}},
\code{\link[=new_external_generic]{new_external_generic()}}, or an existing S3 generic.}

\item{signature}{A method signature. For R7 generics that use single
dispatch, this should be one of the following:
\itemize{
\item An R7 class (created by \code{\link[=new_class]{new_class()}}).
\item An R7 union (created by \code{\link[=new_union]{new_union()}}).
\item An S3 class (created by \code{\link[=new_S3_class]{new_S3_class()}}).
\item An S4 class (created by \code{\link[methods:getClass]{methods::getClass()}} or \code{\link[methods:new]{methods::new()}}).
\item A base type specified either with its constructor (\code{logical}, \code{integer},
\code{double} etc) or its name (\code{"logical"}, \code{"integer"}, "\code{double}" etc).
\item A base union type specified by its name: \code{"numeric"}, \code{"atomic"}, or
\code{"vector"}.
}

For R7 generics that use multiple dispatch, this can be a list of any of
the above types.

For S3 generics, this must be an R7 class.}

\item{value}{A function that implements the generic specification for the
given \code{signature}.}
}
\description{
A generic defines the interface of a function. Once you have created a
generic with \code{\link[=new_generic]{new_generic()}}, you provide implementations for specific
signatures by registering methods with \verb{method<-}

The goal is for \verb{method<-} to be the single function you need when working
with R7 generics or R7 classes. This means that as well as registering
methods for R7 classes on R7 generics, you can also register methods for
R7 classes on S3 or S4 generics, and S3 or S4 classes on R7 generics.
But this is not a general method registration function: at least one of
\code{generic} and \code{signature} needs to be from R7.
}
\examples{
# Create a generic
bizarro <- new_generic("bizarro", "x")
# Register some methods
method(bizarro, "numeric") <- function(x) rev(x)
method(bizarro, new_S3_class("data.frame")) <- function(x) {
  x[] <- lapply(x, bizarro)
  rev(x)
}

# Using a generic calls the methods automatically
bizarro(head(mtcars))
}
