% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S3.R
\name{s3_class}
\alias{s3_class}
\title{Declare an S3 class}
\usage{
s3_class(class, constructor = NULL, validator = NULL)
}
\arguments{
\item{class}{Character vector of S3 classes}

\item{constructor}{An optional constructor that can be used to create
objects of the specified class. This is only needed if you wish to
have an R7 class inherit from an S3 class. It must be specified in the
same way as a R7 constructor: the first argument should be \code{.data}
(the base type whose attributes will be modified).}

\item{validator}{An optional validator that can be used to check that
the S3 object is correct.}
}
\description{
To use an S3 class with R7, you must explicitly declare it using
\code{s3_class()} because S3 lacks a formal class definition.
}
\section{Method dispatch, properties, and unions}{
There are three ways of using S3 with R7 that only require the S3 class
vector:
\itemize{
\item Registering a S3 method for an R7 generic.
\item Restricting an R7 property to an S3 class.
\item Using an an S3 class in R7 union.
}

This is easy, and you can usually include the \code{s3_class()}
call inline:\if{html}{\out{<div class="sourceCode R">}}\preformatted{method(my_generic, s3_class("factor")) <- function(x) "A factor"
new_class("my_class", properties = list(types = s3_class("factor")))
new_union("character", s3_class("factor"))
}\if{html}{\out{</div>}}
}

\section{Extending an S3 class}{
Creating an R7 class that extends an S3 class requires more work. You'll
also need to provide a constructor for the S3 class that follows R7
conventions. This means the first argument to the constructor should be
\code{.data}, and it should be followed by one argument for each attribute used
by the class.

This can be because base S3 classes are usually heavily wrapped for user
convenience and no low level constructor is available. For example, the
factor class is an integer vector with a character vector of \code{levels}, but
there's no base R function that takes an integer vector of values and
character vector of levels, verifies that they are consistent, then
creates a factor object.

You may optionally want to also provide a \code{validator} function which will
ensure the \code{\link[=validate]{validate()}} confirms the validity of any R7 classes that build
on this class. Unlike an R7 validator, you are responsible for validating
the types of the attributes.

The following code shows how you might wrap the base Date class.
A Date is a numeric vector with class \code{Date} that can be constructed with
\code{.Date()}.\if{html}{\out{<div class="sourceCode R">}}\preformatted{S3_Date <- s3_class("Date",
  function(.data) \{
    .Date(.data)
  \},
  function(object) \{
    if (!is.numeric(object)) \{
      "Underlying data must be numeric"
    \}
  \}
)
}\if{html}{\out{</div>}}
}

