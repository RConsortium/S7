% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/external-generic.R
\name{new_external_generic}
\alias{new_external_generic}
\alias{external_methods_register}
\title{Generics in other packages}
\usage{
new_external_generic(package, name, dispatch_args, version = NULL)

external_methods_register()
}
\arguments{
\item{package}{Package the generic is defined in.}

\item{name}{Name of generic, as a string.}

\item{dispatch_args}{Character vector giving arguments used for dispatch.}

\item{version}{An optional version the package must meet for the method to
be registered.}
}
\description{
To register a method for a generic in another packages you need to
\code{new_external_generic()} and \code{external_methods_register()} together.
\code{new_external_generic()} defines the "shape" of the generic without
requiring the other package be available. You then call
\code{external_methods_register()} in \code{.onLoad()} to dynamically register
the methods when the other package is loaded.
}
