% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dispatch.R
\name{method}
\alias{method}
\title{Retrieve a method for an R7 generic}
\usage{
method(generic, signature)
}
\arguments{
\item{generic}{A generic function, either created by \code{\link[=new_generic]{new_generic()}},
\code{\link[=new_external_generic]{new_external_generic()}}, or an existing S3 generic.}

\item{signature}{A method signature. For R7 generics that use single
dispatch, this should be one of the following:
\itemize{
\item An R7 class (created by \code{\link[=new_class]{new_class()}}).
\item An R7 union (created by \code{\link[=new_union]{new_union()}}).
\item An S3 class (created by \code{\link[=s3_class]{s3_class()}}).
\item An S4 class (created by \code{\link[methods:getClass]{methods::getClass()}} or \code{\link[methods:new]{methods::new()}}).
\item A base type specified either with its constructor (\code{logical}, \code{integer},
\code{double} etc) or its name (\code{"logical"}, \code{"integer"}, "\code{double}" etc).
\item A base union type specified by its name: \code{"numeric"}, \code{"atomic"}, or
\code{"vector"}.
}

For R7 generics that use multiple dispatch, this can be a list of any of
the above types.

For S3 generics, this must be an R7 class.}
}
\value{
A function with class <R7_method>.
}
\description{
\code{method()} takes a generic and signature and retrieves the corresponding
method. This is rarely needed because most of the time you'll rely on the
the generic, via \code{\link[=method_call]{method_call()}}, to find and call the method for you.
However, this introspection is useful if you want to see the implementation
of a specific method.
}
\examples{
# Create a generic and register some methods
bizarro <- new_generic("bizarro", "x")
method(bizarro, "numeric") <- function(x) rev(x)
method(bizarro, s3_class("factor")) <- function(x) {
  levels(x) <- rev(levels(x))
  x
}

# Printing the generic shows the registered method
bizarro

# And you can use method() to inspect specific implementations
method(bizarro, "integer")
method(bizarro, s3_class("factor"))
}
